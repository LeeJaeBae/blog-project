type Chat {
  id: Int!
  messages: [Message]!
  participants: [User]!
  createAt: String!
  updateAt: String
}

type Message {
  id: Int!
  text: String!
  chat: Chat!
  user: User!
  userId: Int!
  createAt: String!
  updateAt: String
}

type Content {
  id: Int!
  writer: User!
  context: String!
  createAt: String!
  updateAt: String
}

type EmailSignInResponse {
  ok: Boolean!
  error: String
  token: String
}

type Mutation {
  EmailSignIn(email: String!, password: String!): EmailSignInResponse!
  EmailSignUp(firstName: String!, lastName: String!, email: String!, password: String!, profilePhoto: String!, phoneNumber: String!): EmailSignUpResponse!
}

type EmailSignUpResponse {
  ok: Boolean!
  error: String
  token: String
}

type GetMyProfileResponse {
  ok: Boolean!
  error: String
  user: User
}

type Query {
  GetMyProfile: GetMyProfileResponse!
  user: User
}

type User {
  id: Int!
  email: String!
  firstName: String!
  lastName: String!
  password: String
  profilePhoto: String
  content: [Content]
  chat: Chat
  messages: [Message]
  createAt: String!
  updateAt: String!
  fullName: String
}
